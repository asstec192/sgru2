// @ts-nocheck
/* eslint-disable */
// --------------------------------------------------
// This file is auto-generated by Tuyau. Do not edit manually !
// --------------------------------------------------

import type { MakeTuyauRequest, MakeNonSerializedTuyauResponse } from '@tuyau/utils/types'
import type { InferInput } from '@vinejs/vine/types'

type EmergenciesGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/period.ts')['periodValidator']>>
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/emergencies_controller.ts').default['findMany'], true>
}
type EmergenciesCountBytypeGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/period.ts')['periodValidator']>>
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/emergencies_controller.ts').default['countByType'], true>
}
type EmergenciesCountByreasonGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/period.ts')['periodValidator']>>
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/emergencies_controller.ts').default['countByReason'], true>
}
type EmergenciesCountBycalltypeGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/period.ts')['periodValidator']>>
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/emergencies_controller.ts').default['countByCallType'], true>
}
type EmergenciesCountByregionGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/period.ts')['periodValidator']>>
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/emergencies_controller.ts').default['countByRegion'], true>
}
type EmergenciesCountByneighborhoodGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/period.ts')['periodValidator']>>
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/emergencies_controller.ts').default['countByNeighborhood'], true>
}
type EmergenciesCountByriskGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/period.ts')['periodValidator']>>
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/emergencies_controller.ts').default['countByRisk'], true>
}
type EmergenciesCountByhospitalGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/period.ts')['periodValidator']>>
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/emergencies_controller.ts').default['countByHospital'], true>
}
type EmergenciesCountByintercurrenceGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/period.ts')['periodValidator']>>
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/emergencies_controller.ts').default['countByIntercurrence'], true>
}
type EmergenciesCountByvehiclesGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/period.ts')['periodValidator']>>
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/emergencies_controller.ts').default['countByVehicles'], true>
}
type EmergenciesIdGetHead = {
  request: unknown
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/emergencies_controller.ts').default['findOne'], false>
}
type EmergenciesIdPatientsGetHead = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/period.ts')['periodValidator']>>
  response: MakeNonSerializedTuyauResponse<import('../app/controllers/emergencies_controller.ts').default['patients'], true>
}
export interface ApiDefinition {
  'emergencies': {
    '$url': {
    };
    '$get': EmergenciesGetHead;
    '$head': EmergenciesGetHead;
    'count': {
      'byType': {
        '$url': {
        };
        '$get': EmergenciesCountBytypeGetHead;
        '$head': EmergenciesCountBytypeGetHead;
      };
      'byReason': {
        '$url': {
        };
        '$get': EmergenciesCountByreasonGetHead;
        '$head': EmergenciesCountByreasonGetHead;
      };
      'byCallType': {
        '$url': {
        };
        '$get': EmergenciesCountBycalltypeGetHead;
        '$head': EmergenciesCountBycalltypeGetHead;
      };
      'byRegion': {
        '$url': {
        };
        '$get': EmergenciesCountByregionGetHead;
        '$head': EmergenciesCountByregionGetHead;
      };
      'byNeighborhood': {
        '$url': {
        };
        '$get': EmergenciesCountByneighborhoodGetHead;
        '$head': EmergenciesCountByneighborhoodGetHead;
      };
      'byRisk': {
        '$url': {
        };
        '$get': EmergenciesCountByriskGetHead;
        '$head': EmergenciesCountByriskGetHead;
      };
      'byHospital': {
        '$url': {
        };
        '$get': EmergenciesCountByhospitalGetHead;
        '$head': EmergenciesCountByhospitalGetHead;
      };
      'byIntercurrence': {
        '$url': {
        };
        '$get': EmergenciesCountByintercurrenceGetHead;
        '$head': EmergenciesCountByintercurrenceGetHead;
      };
      'byVehicles': {
        '$url': {
        };
        '$get': EmergenciesCountByvehiclesGetHead;
        '$head': EmergenciesCountByvehiclesGetHead;
      };
    };
    ':id': {
      '$url': {
      };
      '$get': EmergenciesIdGetHead;
      '$head': EmergenciesIdGetHead;
      'patients': {
        '$url': {
        };
        '$get': EmergenciesIdPatientsGetHead;
        '$head': EmergenciesIdPatientsGetHead;
      };
    };
  };
}
const routes = [
] as const;
export const api = {
  routes,
  definition: {} as ApiDefinition
}
